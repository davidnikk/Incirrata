@model Incirrata.Models.TaskViewModel

@{
    ViewBag.Title = "Edit Task";
}

@section styles {
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.19.1/moment.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.0-alpha14/js/tempusdominus-bootstrap-4.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.0-alpha14/css/tempusdominus-bootstrap-4.min.css" />
}

<div class="body-content">
    <div class="container mt-3">
        <div class="col-md-6 offset-md-3">
            <h3>Update Task</h3>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*FORM FOR CHANGING STATUS*@
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col">
                            <select class="form-control" name="Status">
                                @foreach (var item in Model.statusValues)
                                {
                                    <option value="@item" @if (item.Equals(Model.Status)) { WriteLiteral("selected"); }>@item</option>
                                }
                            </select>
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Progress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col">
                            <div class="slidecontainer">
                                <input type="range" min="0" max="100" value="@Model.Progress" class="slider" id="myRange" name="Progress">
                                <p>Value: <span id="demo"></span></p>
                            </div>
                        </div>
                    </div>

                    @if (User.IsInRole("Project Manager") || User.IsInRole("Administrator"))
                    {
                        <div class="form-group">
                            <label for="Developer" class="control-label col-md-2">Developer</label>
                            <div class="col">
                                <select class="form-control" name="Developer">
                                    <option>Not assigned</option>
                                    @foreach (var item in Model.UsersDDL)
                                    {

                                        <option value="@item.Id" @if (item.Id == Model.CurrentDeveloperId) { WriteLiteral("selected"); }>@item.Name @item.Surname</option>

                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Deadline" class="control-label col-md-2">Deadline</label>
                            <div class="col">
                                <div class="form-group">
                                    <div class="input-group date" id="datetimepicker1" data-target-input="nearest">
                                        <input type="text" value="@Model.Deadline.ToString("MM/dd/yyyy hh:mm tt")" name="Deadline" class="form-control datetimepicker-input" data-target="#datetimepicker1" />
                                        <div class="input-group-append" data-target="#datetimepicker1" data-toggle="datetimepicker">
                                            <div class="input-group-text">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <script type="text/javascript">
                                $(function () {
                                    $('#datetimepicker1').datetimepicker();
                                });
                            </script>
                        </div>
                    }

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-secondary" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div>
            <i class="fa fa-angle-left"></i> @Html.ActionLink("All Tasks", "Index")
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var slider = document.getElementById("myRange");
    var output = document.getElementById("demo");
    output.innerHTML = slider.value;

    slider.oninput = function () {
        output.innerHTML = this.value;
    }
</script>
